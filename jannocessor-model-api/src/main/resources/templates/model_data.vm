/**
 * Copyright 2011 jannocessor.org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package $packageName;

#smart_import()
#if($model.interfaces.size() > 0)
#set($extends = $packageName + "." + $model.interfaces[0].asElement.name.appendPart("Data"))
#end

@#type("javax.annotation.Generated")("JAnnocessor-bootstraped")
public class $className#if($extends) extends #type(${extends})#end implements #type(${model.qualifiedName}) {

#foreach ($m in $model.methods)
    private #type($m.returnType) ${helper.fieldName($m)};

#end

#foreach ($m in $model.methods)
    public #type($m.returnType) ${m.name}() {
        return this.${helper.fieldName($m)};
    }

    public void ${m.name.replacePart(0, "set")}(#type($m.returnType) value) {
        this.${helper.fieldName($m)} = value;
    }

#end

}

#macro( smart_import )
(!PLACEHOLDER:SMART_IMPORT!)
#end

#macro( type $java_type )$types.useType($java_type)#end
