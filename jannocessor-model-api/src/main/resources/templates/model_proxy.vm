package $packageName;

#smart_import()
#if($model.interfaces.size() > 0)
#set($extends = $packageName + "." + $model.interfaces[0].asElement.name.appendPart("Proxy"))
#end
#set($data = "org.jannocessor.data." + $model.name.appendPart("Data"))

@#type("javax.annotation.Generated")("JAnnocessor-bootstraped")
public class $className#if($extends) extends #type(${extends})#end implements #type(${model.qualifiedName}) {

    private $model.name adapter;

    private #type($data) data;

    public $className($model.name adapter, ${model.name}Data data) {
#if($extends)
        super(adapter, data);
#end
        this.adapter = adapter;
        this.data = data;
    }

#foreach ($m in $model.methods)
	private boolean ${m.name}Initialized = false;

#end

#foreach ($m in $model.methods)
    public #type($m.returnType) ${m.name}() {
        if (!${m.name}Initialized) {
            data.${m.name.replacePart(0, "set")}(adapter.${m.name}());
			${m.name}Initialized = true;
        }

        return data.${m.name}();
    }

#end

}

#macro( smart_import )
(!PLACEHOLDER:SMART_IMPORT!)
#end

#macro( type $java_type )$types.useType($java_type)#end
